image: alpine:latest

variables:
  GIT_SUBMODULE_STRATEGY: "recursive"

stages:
  - build
  - test
  - deploy

build:
  stage: build
  image: mcr.microsoft.com/dotnet/core/sdk:2.2-alpine
  tags:
    - docker
    - linux
  services:
  - docker:dind
  variables:
    DOCKER_DRIVER: overlay2
  script:
    - install_dependencies
    - build
  only:
    - branches
    - tags
  # except:
  #   - master
  #   - production
  #   - preproduction

test:
  stage: test
  image: mcr.microsoft.com/dotnet/core/sdk:2.2-alpine
  tags:
    - docker
    - linux
  services:
    - docker:dind
  script:
    - install_dependencies
    - test
  only:
    - branches
    - tags

deploy:nuget:
  image: mcr.microsoft.com/dotnet/framework/sdk:4.8
  stage: deploy
  tags:
    - docker
    - windows
  script:
    - "& ./build-nuget-ci.ps1"
  only:
    - master
    - preproduction
    - production
  when: manual
  before_script: 
    - "echo Deploy Nuget..."

deploy:docu:
  stage: deploy
  image: 
    name: registry-git.fleetboard-logistics.com/conizi/plattform/semanticmodel/docfx-build:2
    entrypoint: [""]
  tags:
    - docker
    - linux
  script:
     - setup_ssh
     - docfx ./docs/docfx.json
     - deploy_docs
  only:
    - master
    - preproduction
    - production
  when: manual

.auto_devops: &auto_devops |
  [[ "$TRACE" ]] && set -x
  export CI_APPLICATION_TAG=$CI_COMMIT_SHA
    
  export TAG=$CI_APPLICATION_TAG
  export GENERATOR__JSONSCHEMALICENSE="$GENERATOR_JSONSCHEMALICENSE"
  export BRANCH=$CI_COMMIT_REF_NAME

  function setup_ssh() {
    eval $(ssh-agent -s) 
    echo "$DK_GITHUB_RUNNER_PK" | tr -d '\r' | ssh-add - >/dev/null
    ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts
    echo "Agent configured"
  }

  function install_dependencies() {
    echo "Installing deps"
    apk add -U openssl curl tar gzip bash ca-certificates git
  }

  function build() {
    echo "Building..."
    dotnet build ./Conizi.Model.sln --configuration NetCore -f netstandard2.0
  }

  function deploy_docs() {
    echo "Deploy to docs..."   
    USE_DIR="test"
    case $BRANCH in
     master)
          USE_DIR="site-test"
          ;;
     preproduction)
          USE_DIR="site-test"
          ;;
     production)
          USE_DIR="site"
          ;; 
     *)
        USE_DIR="site-test"
        ;;
    esac

    echo "Deploy docs to $USE_DIR" 

    mkdir ./tmp
    cd ./tmp
    git clone git@github.com:fleetboard-logistics/fleetboard-logistics.github.io.git
    rm -f ./fleetboard-logistics.github.io/docs/conizi/semantic-models/$USE_DIR/ -r
    mv ../docs/_site ./fleetboard-logistics.github.io/docs/conizi/semantic-models/$USE_DIR
    cd ./fleetboard-logistics.github.io
    git add ./docs/conizi/semantic-models/$USE_DIR
    git commit ./docs/conizi/semantic-models/$USE_DIR -m "Update docu for $BRANCH"
    git push
  }
  
  function test() {
    echo "Testing..."
    dotnet test ./test/Conizi.Model.UnitTests/Conizi.Model.UnitTests.csproj --filter "Category=UnitTest" -v n 
  }

before_script:
  - *auto_devops