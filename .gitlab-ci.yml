image: alpine:latest

variables:
  GIT_SUBMODULE_STRATEGY: "recursive"

stages:
  - build
  - test
  - deploy

build:
  stage: build
  image: mcr.microsoft.com/dotnet/core/sdk:2.2-alpine
  tags:
    - docker
  services:
  - docker:dind
  variables:
    DOCKER_DRIVER: overlay2
  script:
    - install_dependencies
    - build
  only:
    - branches
    - tags
  before_script:
  - .auto_devops
  # except:
  #   - master
  #   - production
  #   - preproduction

test:
  stage: test
  image: mcr.microsoft.com/dotnet/core/sdk:2.2-alpine
  tags:
    - docker
  script:
    - install_dependencies
    - test
  only:
    - branches
    - tags
  before_script:
  - .auto_devops

deploy:
  stage: deploy
  tags:
    - semantic
    - models
    - win
  script:
    - powershell -noprofile -noninteractive -executionpolicy Bypass -command buildci.ps1
  only:
    - master
  when: manual

.auto_devops: &auto_devops |
  function before() { 
    [[ "$TRACE" ]] && set -x
    export CI_APPLICATION_TAG=$CI_COMMIT_SHA
    
    export TAG=$CI_APPLICATION_TAG
    export GENERATOR__JSONSCHEMALICENSE="$GENERATOR_JSONSCHEMALICENSE"
  }
  
  function install_dependencies() {
    echo "Installing deps"
    apk add -U openssl curl tar gzip bash ca-certificates git
  }

  function build() {
    echo "Building..."
    dotnet build ./Conizi.Model.sln --configuration NetCore -f netstandard2.0
  }

  function deploy_nuget() {
    echo "Deploy to nuget..."   
    dotnet pack src/Conizi.Model/Conizi.Model.csproj --output nupkgs /p:NuspecFile=Conizi.Model.nuspec /p:TargetFrameworks=netstandard2.0
    dotnet pack src/Conizi.Model.Core/Conizi.Model.Core.csproj --output nupkgs /p:NuspecFile=Conizi.Model.Core.nuspec /p:TargetFrameworks=netstandard2.0
  }
  
  function test() {
    echo "Testing..."
    dotnet test ./test/Conizi.Model.UnitTests/Conizi.Model.UnitTests.csproj --filter "Category=UnitTest" -v n 
  }