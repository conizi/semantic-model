{
  "$schema": "http://json-schema.org/draft-06/schema#",
  "$id": "https://model.conizi.io/v1/transport/truck/groupage/forwarding/tour-event.json",
  "title": "Tour event",
  "description": "An event which occurred during the processing of the referenced tour",
  "definitions": {
    "#vehicleSpecificEvent": {
      "$id": "#vehicleSpecificEvent",
      "title": "Vehicle specific Event",
      "description": "Event to notify about vehicle specific incidents",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "geoPosition": {
          "$id": "geoPosition",
          "title": "Geo position",
          "description": "Data about the current geo position",
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "longitude": {
              "title": "Longitude",
              "description": "East–west position of a point on the Earth's surface",
              "type": "number"
            },
            "latitude": {
              "title": "Latitude",
              "description": "North–south position of a point on the Earth's surface",
              "type": "number"
            },
            "placeName": {
              "title": "Place name",
              "description": "The place name of the current geo position",
              "type": "string"
            },
            "w3WCoordinate": {
              "title": "What3words coordinate",
              "description": "A coordinate for the What3Words service like index.home.raft",
              "type": "string"
            },
            "recordTime": {
              "title": "Record time",
              "description": "Time the GPS record was created",
              "type": "string",
              "format": "date-time"
            }
          },
          "required": [
            "longitude",
            "latitude"
          ]
        },
        "eventDateTime": {
          "title": "Event Date-time",
          "description": "Date and time when the event occurred",
          "type": "string",
          "format": "date-time"
        },
        "weight": {
          "title": "Weight of vehicle",
          "description": "Weight of the vehicle in kg",
          "type": "number"
        },
        "loadingMeter": {
          "title": "loading meter",
          "description": "Available loading meter",
          "type": "number"
        },
        "driverName": {
          "title": "Driver Name",
          "description": "Name of the driver",
          "type": "string"
        },
        "coDriverName": {
          "title": "Co-driver Name",
          "description": "Name of the co-driver",
          "type": "string"
        },
        "mileageStart": {
          "title": "Mileage Start",
          "description": "Mileage of the vehicle at tour start",
          "type": "number"
        },
        "mileageFinish": {
          "title": "Mileage Finish",
          "description": "Mileage of the vehicle at the end of the tour",
          "type": "number"
        },
        "temperature": {
          "title": "Temperature",
          "description": "Current temperature in degrees Celsius",
          "type": "number"
        },
        "truckRegistrationNumber": {
          "title": "Truck Registration Number",
          "description": "The registration number of the truck",
          "type": "string"
        },
        "trailerRegistrationNumber": {
          "title": "Trailer Registration Number",
          "description": "Registration number of the trailer",
          "type": "string"
        },
        "estimatedArrivalTime": {
          "title": "Estimated Arrival Time",
          "description": "The current calculated estimated arrival time (ETA)",
          "type": "string",
          "format": "date-time"
        },
        "remarks": {
          "title": "Remarks (free form)",
          "description": "Additional remarks",
          "type": "string"
        }
      },
      "required": [
        "eventDateTime"
      ],
      "patternProperties": {
        "x-.*": {},
        "\\$.*": {}
      }
    },
    "binaryData": {
      "$id": "binaryData",
      "title": "Binary Data",
      "description": "The content/data of a file",
      "type": "object",
      "properties": {
        "length": {
          "title": "Data length",
          "description": "The length (bytes) of submitted data",
          "type": "integer"
        },
        "data": {
          "title": "Data bytes",
          "description": "The submitted data as base64 string, be aware large files > 100KByte should be submitted as fileReference",
          "type": "string"
        }
      },
      "required": [
        "data"
      ]
    },
    "fileContent": {
      "$id": "fileContent",
      "title": "File Content",
      "description": "Transfers file data like a picture, pdf, txt..",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "fileName": {
          "title": "File Name",
          "description": "The file name",
          "type": "string"
        },
        "contentType": {
          "title": "Content Type",
          "description": "The content type like application/pdf, image/png...",
          "type": "string"
        },
        "binaryData": {
          "$ref": "binaryData"
        },
        "fileReference": {
          "$id": "fileReference",
          "title": "File Reference",
          "description": "Reference to a file in an online storage",
          "type": "object",
          "properties": {
            "fileId": {
              "title": "File Id",
              "description": "Unique Id for a file",
              "type": "string"
            },
            "length": {
              "title": "Data length",
              "description": "The length (bytes) of submitted data",
              "type": "integer"
            },
            "absoluteUri": {
              "title": "Absolute Uri",
              "description": "An absolute URL to a file on the online storage",
              "type": "string"
            },
            "uriValidFrom": {
              "title": "Uri Valid From",
              "description": "The URL is valid from date",
              "type": "string",
              "format": "date-time"
            },
            "uriValidTo": {
              "title": "Uri Valid To",
              "description": "The URL is valid until date",
              "type": "string",
              "format": "date-time"
            }
          },
          "required": [
            "absoluteUri"
          ]
        }
      },
      "patternProperties": {
        "x-.*": {},
        "\\$.*": {}
      }
    },
    "fileReference": {
      "$ref": "fileReference"
    },
    "geoPosition": {
      "$ref": "geoPosition"
    },
    "loadingEquipmentExchange": {
      "$id": "loadingEquipmentExchange",
      "title": "Loading equipment exchange",
      "description": "Information about loading equipment exchange",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "exchanged": {
          "title": "Exchanged",
          "description": "Loading Equipment was exchanged",
          "type": "boolean"
        },
        "amountEurPallets": {
          "title": "Amount Euro Pallets",
          "description": "Add/Remove amount of EUR pallets as defined by European Pallet Association (EPAL)",
          "type": "integer"
        },
        "amountEurBoxes": {
          "title": "AmountEuro Boxes",
          "description": "Add/Remove amount EUR Box pallets as defined by European Pallet Association (EPAL)",
          "type": "integer"
        }
      },
      "required": [
        "exchanged"
      ],
      "patternProperties": {
        "x-.*": {},
        "\\$.*": {}
      }
    },
    "messageRouting": {
      "$id": "messageRouting",
      "title": "Routing information of the message",
      "description": "Routing information to identify the parties involved in the data transfer",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "partnerId": {
          "title": "The PartnerId",
          "description": "The partner which is sending the message to the receiving partner for further actions (e.g. 1234)",
          "type": "string"
        },
        "ediId": {
          "title": "The Edi Id",
          "description": "The Edi Id is the technical sender or receiver (e.g. CONIZVK)",
          "type": "string"
        },
        "coniziId": {
          "title": "The Conizi Id",
          "description": "The conizi id for internal routing purposes",
          "type": "string"
        }
      },
      "patternProperties": {
        "x-.*": {},
        "\\$.*": {}
      }
    },
    "network": {
      "$id": "network",
      "title": "Network",
      "description": "The network under which rules the consignment should be processed",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "networkId": {
          "title": "Name of the network",
          "description": "The name of the network. This is often identical to the name of the code list. Since the same code list may however be used outside the network, this field independently allows to specify the network",
          "type": "string"
        },
        "codelist": {
          "title": "Name of the code list used",
          "description": "The name of the code list which specifies how the receiving system should interpret the codes used",
          "type": "string"
        },
        "product": {
          "title": "Name of the product",
          "description": "The product allows to distingish different processes within one network, effectively sub classing the network",
          "type": "string"
        }
      }
    },
    "stopSpecificEvent": {
      "$id": "stopSpecificEvent",
      "title": "Stop specific Event",
      "description": "Event to notify about stop specific incidents",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "geoPosition": {
          "$ref": "geoPosition"
        },
        "eventDateTime": {
          "title": "Event Date-time",
          "description": "Date and time when the event occurred",
          "type": "string",
          "format": "date-time"
        },
        "stopId": {
          "title": "Stop Id",
          "description": "Unique identifier for this stop. References the stop within the tour",
          "type": "string"
        },
        "onWayLoadingPoint": {
          "title": "On the way to loading point",
          "description": "Vehicle is on the way to loading point",
          "type": "boolean"
        },
        "arrivedAtLoadingPoint": {
          "title": "Arrived at loading point",
          "description": "Vehicle is arrived at loading point",
          "type": "boolean"
        },
        "loadingStarted": {
          "title": "Loading Started",
          "description": "Loading of the vehicle has started",
          "type": "boolean"
        },
        "loadingCompleted": {
          "title": "Loading Completed",
          "description": "Loading of the vehicle was completed",
          "type": "boolean"
        },
        "onWayUnloadingPoint": {
          "title": "On the way to unloading point",
          "description": "Vehicle is on the way to unloading point",
          "type": "boolean"
        },
        "arrivedAtUnloadingPoint": {
          "title": "Arrived at unloading point",
          "description": "Vehicle is arrived at unloading point",
          "type": "boolean"
        },
        "unloadingStarted": {
          "title": "Unloading Started",
          "description": "Unloading of the vehicle has started",
          "type": "boolean"
        },
        "unloadingCompleted": {
          "title": "Unloading Completed",
          "description": "Unloading of the vehicle was completed",
          "type": "boolean"
        },
        "documentsReceived": {
          "title": "Documents Received",
          "description": "Documents has been received",
          "type": "boolean"
        },
        "departure": {
          "title": "Departure",
          "description": "Departure, the stop has been completed",
          "type": "boolean"
        },
        "loadingEquipmentExchange": {
          "$ref": "loadingEquipmentExchange"
        },
        "remarks": {
          "title": "Remarks (free form)",
          "description": "Additional remarks",
          "type": "string"
        }
      },
      "required": [
        "eventDateTime",
        "stopId"
      ],
      "patternProperties": {
        "x-.*": {},
        "\\$.*": {}
      }
    },
    "tourDocuments": {
      "$id": "tourDocuments",
      "title": "Tour Documents",
      "description": "Event to notify about tour specific documents",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "geoPosition": {
          "$ref": "geoPosition"
        },
        "eventDateTime": {
          "title": "Event Date-time",
          "description": "Date and time when the event occurred",
          "type": "string",
          "format": "date-time"
        },
        "signature": {
          "type": "array",
          "items": {
            "$ref": "fileContent"
          }
        },
        "damages": {
          "type": "array",
          "items": {
            "$ref": "fileContent"
          }
        },
        "loadSecuring": {
          "type": "array",
          "items": {
            "$ref": "fileContent"
          }
        },
        "drivingLicense": {
          "type": "array",
          "items": {
            "$ref": "fileContent"
          }
        },
        "checklistDepartureControl": {
          "title": "Checklist Departure Control",
          "description": "A checklist of departure control is available",
          "type": "boolean"
        },
        "checklistInstruction": {
          "title": "Checklist Instruction",
          "description": "A checklist of vehicle inspection is available",
          "type": "boolean"
        },
        "checklistVehicleInspection": {
          "title": "ChecklistVehicle Inspection",
          "description": "A checklist of vehicle inspection is available",
          "type": "boolean"
        },
        "remarks": {
          "title": "Remarks (free form)",
          "description": "Additional remarks",
          "type": "string"
        }
      },
      "required": [
        "eventDateTime"
      ],
      "patternProperties": {
        "x-.*": {},
        "\\$.*": {}
      }
    },
    "tourSpecificEvent": {
      "$id": "tourSpecificEvent",
      "title": "Tour specific Event",
      "description": "Event to notify about tour specific incidents",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "geoPosition": {
          "$ref": "geoPosition"
        },
        "eventDateTime": {
          "title": "Event Date-time",
          "description": "Date and time when the event occurred",
          "type": "string",
          "format": "date-time"
        },
        "tourScheduled": {
          "title": "Tour scheduled",
          "description": "Disposal of a tour was done",
          "type": "boolean"
        },
        "tourTransmitted": {
          "title": "Tour transmitted",
          "description": "The tour was transmitted to the mobile device",
          "type": "boolean"
        },
        "tourAccepted": {
          "title": "Tour accepted",
          "description": "The tour was accepted by the driver on mobile device",
          "type": "boolean"
        },
        "tourRejected": {
          "title": "Tour rejected",
          "description": "The tour was rejected by the driver on mobile device",
          "type": "boolean"
        },
        "tourStarted": {
          "title": "Tour started",
          "description": "The tour was started by the driver",
          "type": "boolean"
        },
        "tourCompleted": {
          "title": "Tour completed",
          "description": "The tour was completed by the driver",
          "type": "boolean"
        },
        "tourPaused": {
          "title": "Tour paused",
          "description": "The tour was paused by the driver",
          "type": "boolean"
        },
        "tourResumed": {
          "title": "Tour resumed",
          "description": "The tour was resumed by the driver",
          "type": "boolean"
        },
        "workingTimeStarted": {
          "title": "Working Time Started",
          "description": "Working time has been started for the driver",
          "type": "boolean"
        },
        "workingTimeCompleted": {
          "title": "Working Time Completed",
          "description": "Working time has been ended for the driver",
          "type": "boolean"
        },
        "cleaningStarted": {
          "title": "Cleaning Started",
          "description": "Cleaning of the vehicle has been started",
          "type": "boolean"
        },
        "cleaningCompleted": {
          "title": "Cleaning Completed",
          "description": "Cleaning of the vehicle has been completed",
          "type": "boolean"
        },
        "trailerExchangeStarted": {
          "title": "Trailer Exchange Started",
          "description": "Exchange of the trailer has been started",
          "type": "boolean"
        },
        "trailerExchangeCompleted": {
          "title": "Trailer Exchange Completed",
          "description": "Exchange of the trailer has been completed",
          "type": "boolean"
        },
        "changeSwapBodyStarted": {
          "title": "Trailer Exchange Started",
          "description": "Exchange of the trailer has been started",
          "type": "boolean"
        },
        "changeSwapBodyCompleted": {
          "title": "Trailer Exchange Completed",
          "description": "Exchange of the trailer has been completed",
          "type": "boolean"
        },
        "waitingTimeStarted": {
          "title": "Waiting time for next action started",
          "description": "Exchange of the trailer has been started",
          "type": "boolean"
        },
        "waitingTimeCompleted": {
          "title": "Waiting Time Completed",
          "description": "Waiting time for next action completed",
          "type": "boolean"
        },
        "readyToLoad": {
          "title": "Ready to load",
          "description": "Vehicle is ready to load",
          "type": "boolean"
        },
        "readyToUnload": {
          "title": "Ready to unload",
          "description": "Vehicle is ready to unload",
          "type": "boolean"
        },
        "remarks": {
          "title": "Remarks (free form)",
          "description": "Additional remarks",
          "type": "string"
        }
      },
      "required": [
        "eventDateTime"
      ],
      "patternProperties": {
        "x-.*": {},
        "\\$.*": {}
      }
    }
  },
  "type": "object",
  "additionalProperties": false,
  "properties": {
    "$schema": {
      "title": "Json schema",
      "description": "The used json schema",
      "type": "string"
    },
    "$createdAt": {
      "title": "Created at date",
      "description": "The message was created at date",
      "type": "string",
      "format": "date-time"
    },
    "$createdBy": {
      "title": "Created by generator",
      "description": "The message was created by",
      "type": "string"
    },
    "receiver": {
      "$ref": "messageRouting"
    },
    "sender": {
      "$ref": "messageRouting"
    },
    "network": {
      "$ref": "network"
    },
    "tourId": {
      "title": "Referenced Tour Id",
      "description": "A unique identifier assigned to this tour by the devlivering company",
      "type": "string"
    },
    "tour": {
      "$ref": "tourSpecificEvent"
    },
    "stop": {
      "$ref": "stopSpecificEvent"
    },
    "vehicle": {
      "$ref": "#vehicleSpecificEvent"
    },
    "documents": {
      "$ref": "tourDocuments"
    }
  },
  "required": [
    "$schema",
    "receiver",
    "tourId"
  ],
  "patternProperties": {
    "x-.*": {},
    "\\$.*": {}
  }
}